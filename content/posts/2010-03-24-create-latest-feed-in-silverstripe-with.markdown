Title: Create a "Latest" Feed in SilverStripe with SimplePie
Date: 2010-03-24 17:00
Comments: true
Category: tech
Tags: tutorials, silverstripe
Slug: create-latest-feed-in-silverstripe-with

<div class='post'>
<p>(SilverStripe version 2.3. Version 2.4 has some changes that change what needs to be done to achieve this effect. Among the changes is an updated version of SimplePie.)</p><p>One of the things that my client (and I, for that matter) wanted on  their site was a way to show a snippet from the latest post from their  blog. Since they were already using an established, external blog (in  this case, hosted on Blogger), and we wanted to avoid creating an  internal one and importing everything, we decided to see if we could  find a way to pull in part of the latest post.  As it turns out, SilverStripe has a similar feature built into it.<!-- more --> There  are a few problems, though:</p><ol><li>The feature is only available, by default, as part of the "blog"  module. Since my client's site was not a blog, that meant pulling some  code in and customizing it.</li><li>The default code will pull the entire blog. This means that we'll  need to trim it down.</li><li>Even when trimming down the number of entries it pulls and shows,  it still shows the entire blog entry. So, we need to create a function  to trim the individual post. (As a bonus, though, we end up with a  function we could use for anything that requires trimming a block of  text.)</li></ol><p>This feature is an app called <a href="http://simplepie.org/">SimplePie</a>. Technically speaking,  the version SilverStripe installs with is outdated, but it still works  for our purposes. The only thing you need, then, is to make sure  syndication is turned on, and the address of the feed (the actual RSS  feed address, not the blog address).  <strong>Note:</strong> if you try to access the feed in your browser to get the  feed address and all you get is the bookmark dialog, without a feed  preview page, then make sure your browser is set to preview feeds. In  Firefox, this can be found in Preferences -&gt; Applications as "Web  Feed".  The first thing we need to do is write the controller code. <a href="http://www.silverstripe.org/general-questions/show/269733#post269733">Mo,  in the SilverStripe forums</a> kindly supplied the original portion of  the code, which he pulled from the blog module. Don't forget to change  the first parameter in the SimplePie function call to your feed URL.&nbsp;</p><pre class="brush: php;fontsize: 100; first-line: 1; ">function LatestNews() {<br />$output = new DataObjectSet();<br />include_once(Director::getAbsFile(SAPPHIRE_DIR . '/thirdparty/simplepie/SimplePie.php'));<br />$t1 = microtime(true);<br />$feed = new SimplePie('http://www.silverstripe.org/blog/rss', TEMP_FOLDER);<br />$feed-&gt;init();<br />if($items = $feed-&gt;get_items(0, 1)) {<br />foreach($items as $item) {<br /><br />// Cast the Date<br />$date = new Date('Date');<br />$date-&gt;setValue($item-&gt;get_date());<br /><br />// Cast the Title <br />$title = new Text('Title');<br />$title-&gt;setValue($item-&gt;get_title());<br />// Cast the description and strip<br />$desc = new Text('Description');<br />$desc-&gt;setValue($this-&gt;trunc(strip_tags($item-&gt;get_description()), 40));<br />$output-&gt;push(new ArrayData(array( <br />'Title' =&gt; $title, <br />'Date' =&gt; $date, <br />'Link' =&gt; $item-&gt;get_link(), <br />'Description' =&gt; $desc <br />)));<br />}<br />return $output;<br />}}</pre><p>The observant reader will notice, however, that I've  changed the number in the parameters of the get_items() call. This  change cuts it off at one entry. If you want more entries displayed,  simply change the second number to the number of your choice.  I've also added a small line of code just after getting the description:   $desc-&gt;setValue($this-&gt;trunc(strip_tags($item-&gt;get_description()),  40));  This line of code calls the truncate function, which needs to be added  in above the LatestNews() function (otherwise, you get errors because  PHP tries to call the function before it's been loaded).</p><pre class="brush: php;fontsize: 100; first-line: 1; ">function trunc($phrase, $max_words){<br />&nbsp;$phrase_array = explode(' ',$phrase);<br />&nbsp;if(count($phrase_array) &gt; $max_words &amp;&amp; $max_words &gt; 0){<br />&nbsp;$phrase = implode(' ',array_slice($phrase_array, 0, $max_words)).'...';<br />&nbsp;}<br />&nbsp;return $phrase;<br />&nbsp;}</pre><p>I found this wonderful little piece of code at <a href="http://snippets.dzone.com/posts/show/412">DZone</a>. The  beauty of this function is that it's small and truncates by words,  instead of characters. This way, our snippet isn't cut off mid-word  (which could have some...interesting unforeseen consequences). It also  appends an ellipsis at the end of the truncated message, which is useful  at providing a visual indication that the article continues.  Next, we have to reference our new function in our template. This is as  simple as adding a few lines of template code, such as the following:</p><pre class="brush: xml;fontsize: 100; first-line: 1; ">&lt;% control LatestNews %&gt;<br />&lt;span id="blogTitle"&gt;$Title&lt;/span&gt;<br />&lt;span id="date"&gt;$Date&lt;/span&gt;<br />$Description &lt;a href="$Link"&gt;Read More&lt;/a&gt;<br />&lt;% end_control %&gt; </pre><p>For those unfamiliar with custom controls  (considering it's one of the areas that is somewhat lacking in the  documentation), you'll see that the control is named the same as the  function in the controller. This gives us access to its internal  variables, which we can use to display our feed output. This is  important, since you'll noticed that $Title, which is also a  SilverStripe core variable, is used.  If you go back to your PHP code, you'll see the list of variables we've  opened to the template:</p><pre class="brush: php;fontsize: 100; first-line: 1; ">$output-&gt;push(new ArrayData(array(<br />'Title' =&gt; $title,<br />'Date' =&gt; $date,<br />'Link' =&gt; $item-&gt;get_link(),<br />'Description' =&gt; $desc<br />))); }<br />return $output;</pre><p>Make note that the list on the left  are the names to use in the template (lacking this piece of knowledge  caused me a moment of confusion over why my $Desc variable wasn't  displaying the blog snippet). Other than that, if you need other pieces  of information extracted from your blog, don't forget to add it to this  list.  Back to the template code, $Link returns the raw URL, which means it's  generally best to wrap in an &lt;a href=&gt; tag, such as how I have it,  above.  From there, format it how you want, using CSS and HTML tags, and voila!  You now have yourself a snippet from an external blog in your non-blog  site!</p></div>
