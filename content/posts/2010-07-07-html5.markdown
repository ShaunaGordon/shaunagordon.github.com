title: HTML5
date: 2010-07-07 17:00
category: tech
tags: html/css
slug: html5


<div class='post'>
<p>HTML5 is on its way to completion, and although it won't be officially completed for a couple of years, it's modular nature allows us to use it now. So, I decided to take a look at its information on the W3C website.</p><p>My wanderings led me to a page on <a href="http://www.w3.org/TR/html5-diff/">the differences between HTML4 and HTML5,</a> and so far, I've only made it as far as the new elements section (about halfway through the document). I have one thing to say.</p><p>It's going to be so <em>cool!</em></p><!-- more --><p>The issue with HTML4/XHTML is that it's essentially based off generic document creation. The tags are roughly akin to a set of Legos -- you've got the basic building blocks for just about anything. If you're creative enough, you can even turn the rectangular blocks into circular objects, but it takes some work. If you're not creative or ingenious enough, you end up with a lot of rectangular objects. Theoretically, there's nothing you <em>can't</em> make with Legos, and <a href="http://abcnews.go.com/US/video/lego-lovers-labor-love-10351869">this Lego exhibit</a>, and others, prove it. But to create the extraordinary works in those exhibits takes not only a lot of creativity, but a lot of time and Lego sets.</p><p>Web development is the same way. Obviously, the extraordinary websites, <a href="http://www.smashingmagazine.com/2008/11/26/50-beautiful-and-creative-portfolio-designs/">such as these featured at Smashing Magazine</a>, are entirely possible, even without resorting to making them giant image maps (and yes, even without Flash). Doing so, however, requires a lot of work, code-jockey creativity, and "Legos."</p><p>What makes HTML5 special? We no longer have to work with generic Legos. We now get the option of working with a giant K'Nex set.</p><p>By now, most people know about the <a href="http://9elements.com/io/?p=153">canvas element</a>, even if they haven't been following the HTML5 developments, but the toys don't end there. Not by a long run, and media sites like YouTube aren't the only ones that can get in on the action.</p><p>Even the simplest of sites can join the fun with elements such as &lt;header&gt;, used instead of something like &lt;div id="header"&gt;. Blogs and news sites can now have &lt;article&gt; tags, and form validation just got a whole lot simpler, with fields such as &lt;tel&gt; and &lt;email&gt; that have built-in validation, formatting, and sanitation capabilities.</p><p>There are new attributes for several existing elements, as well. &lt;input&gt; tags now have a "required" attribute, which will keep the form from validating if empty. They also have a "form" attribute, which allows them to be placed anywhere on a page, instead of as a child element of a form. The &lt;script&gt; element now has an "async" attribute which looks like it will aid in AJAX behavior.</p><p>In addition to added items, HTML5 also gets rid of a number of elements and attributes. They were removed because they were presentational in nature and are better handled by CSS. While this may seem minor to most people, this will help prevent a lot of headaches from maintainability issues from having those inline attributes. Granted, you can still have inline styling, but it prevents mixing of the circa 1999 practice and the more modern CSS practices.</p></div>
